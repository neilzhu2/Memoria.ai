{
  "mappings": "AAKA,OAAO,cAAM,uBAAwBA",
  "names": [
    "enabled: boolean"
  ],
  "sources": [
    "src/useDisableScroll.ts"
  ],
  "sourcesContent": [
    "import { useEffect } from 'react'\n\nconst canUseDOM = () =>\n  typeof window !== 'undefined' && !!window.document && !!window.document.createElement\n\nexport const useDisableBodyScroll = (enabled: boolean): void => {\n  useEffect(() => {\n    if (!enabled || !canUseDOM()) {\n      return\n    }\n\n    // for 99% browsers this can replace all the events\n    const bodyEl = document.documentElement\n    const previousBodyStyle = {\n      scrollbarGutter: bodyEl.style.scrollbarGutter,\n      overflow: bodyEl.style.overflow,\n    }\n    bodyEl.style.scrollbarGutter = 'stable'\n    bodyEl.style.overflow = 'hidden'\n\n    return () => {\n      Object.assign(bodyEl.style, previousBodyStyle)\n    }\n  }, [enabled])\n}\n"
  ],
  "version": 3
}